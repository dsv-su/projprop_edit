<?php

function projprop_edit_form_node_form_alter(&$form, &$form_state, $form_id) {
	global $user;

	$node = isset($form['#node']->title) ? $form['#node'] : null;
	if (isset($user->roles[3])) {
		return;
	}

	unset($form['field_cancelled']);
	unset($form['field_sent_to_birgitta_o']);

	// Hide revision logs
	$form['revision_information']['#access'] = FALSE;

	// Set Author to be a current user.
	$form['field_dsv_person_in_charge']['und'][0]['uid']['#default_value'] = $user->uid;

	// Before Unit Head OK
	if (!$node || isset($node->field_ok_from_unit_head) && !$node->field_ok_from_unit_head['und'][0]['value']) {
		unset($form['field_attachment_to_dsv_economy']);
		unset($form['field_attachments_to_vice_head']);
		unset($form['field_comments_to_dsv_economy']);
		unset($form['field_comments_to_vice_head']);
		unset($form['field_final_attachments']);
	}

	// After Unit Head OK
	if (isset($node->field_ok_from_unit_head) && $node->field_ok_from_unit_head['und'][0]['value']) {
		unset($form['field_attachment_unit']);
		unset($form['field_comments_to_unit_head']);
		unset($form['field_unit_head']);
	}

	// Before Economy OK
	if (isset($node->field_ok_from_dsv_economy) && !$node->field_ok_from_dsv_economy['und'][0]['value']) {
		unset($form['field_attachments_to_vice_head']);
		unset($form['field_comments_to_vice_head']);
		unset($form['field_final_attachments']);
	}

	// After Economy OK
	if (isset($node->field_ok_from_dsv_economy) && $node->field_ok_from_dsv_economy['und'][0]['value']) {
		unset($form['field_attachment_to_dsv_economy']);
		unset($form['field_comments_to_dsv_economy']);
		unset($form['field_ok_from_unit_head']);
		unset($form['field_attachment_unit']);
	}

	// Before Vice Head OK
	if (isset($node->field_ok_from_uno) && !$node->field_ok_from_uno['und'][0]['value']) {
		unset($form['field_final_attachments']);
	}

	// After Vice Head OK
	if (isset($node->field_ok_from_uno) && $node->field_ok_from_uno['und'][0]['value']) {
		unset($form['field_attachments_to_vice_head']);
		unset($form['field_comments_to_vice_head']);
		unset($form['field_ok_from_dsv_economy']);
	}

	return true;
}


/**
* Implementation of hook_menu().
**/
function projprop_edit_menu() {
  $items['node/approve/%node'] = array(
    'page arguments' => array(1),
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
    //'access arguments' => array('access content'),
    'delivery callback' => 'projprop_edit_callback',  // Magic goes here
  );
  $items['node/cancel/%node'] = array(
  	'page arguments' => array(1),
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
    //'access arguments' => array('access content'),
    'delivery callback' => 'projprop_edit_callback',  // Magic goes here
  );
  return $items;
}

/*function projprop_edit_cancel_callback($node) {
	// Only Proposal nodes are allowed!
	echo 'DFDFD';
	$data = array(true);
	$node = node_load(arg(2));
	//$approvalby = arg(3);
	if ($node->type != 'project_proposal') {
		return t('Invalid node type!');
	}
	switch (arg(3)) {
		case 'unit-head':
			$node->field_ok_from_unit_head[LANGUAGE_NONE][0]['value'] = 1;
			break;
		case 'dsv-economy':
			$node->field_ok_from_dsv_economy[LANGUAGE_NONE][0]['value'] = 1;
			break;
		case 'vice-head':
			$node->field_ok_from_uno[LANGUAGE_NONE][0]['value'] = 1;
			break;		
		default:
			break;
	}

//	node_save($node);
	drupal_json_output($data);
}
*/
function projprop_edit_callback($node) {
	// Only Proposal nodes are allowed!
	$data = array(true);
	$node = node_load(arg(2));
	$approvalby = arg(3);
	if ($node->type != 'project_proposal') {
		return t('Invalid node type!');
	}
	switch (arg(3)) {
		case 'cancel':
			$node->field_cancelled[LANGUAGE_NONE][0]['value'] = 1;
			break;
		case 'uncancel':
			$node->field_cancelled[LANGUAGE_NONE][0]['value'] = 0;
			break;
		case 'unit-head':
			$node->field_ok_from_unit_head[LANGUAGE_NONE][0]['value'] = 1;
			break;
		case 'dsv-economy':
			$node->field_ok_from_dsv_economy[LANGUAGE_NONE][0]['value'] = 1;
			break;
		case 'vice-head':
			$node->field_ok_from_uno[LANGUAGE_NONE][0]['value'] = 1;
			break;		
		default:
			break;
	}

	node_save($node);
	drupal_json_output($data);
}

/**
 * Implements hook_menu()
 * @author Simon Jarbrant (simon@dsv.su.se)
 */
/*
function projprop_edit_menu() {
	$items['edit/%node'] = array(
		'title' => 'ProjProp Edit',
		'page callback' => 'projprop_edit_page',
		'page arguments' => array(1),
		'access callback' => TRUE,
		// 'access arguments' => array('project proposal edit own content'),
	);

	return $items;
}
*/
/**
 * Delivery callback for /edit/nid
 */
/*
function projprop_edit_page($node) {
	// Only Proposal nodes are allowed!
	if ($node->type != 'project_proposal') {
		return t('Invalid node type!');
	}
	// Create associative array and send to drupal_json_output()
	$data = array();
	$data['edit-proposalform-proposal-edit-node'] = $node->nid;
	$data['edit-proposalform-proposal-title'] = $node->title;

	// Load the author
	if (isset($node->field_dsv_person_in_charge[LANGUAGE_NONE])) {
		$author = user_load($node->field_dsv_person_in_charge[LANGUAGE_NONE][0]['uid']);
		$data['edit-proposalform-proposal-dsv-person-in-charge'] = $author->name;
	} else {
		$data['edit-proposalform-proposal-dsv-person-in-charge'] = "";
	}

	// We only need the deadline date, which is the first 10 characters
	$data['edit-proposalform-proposal-deadline-datepicker-popup-0'] =
		substr($node->field_deadline[LANGUAGE_NONE][0]['value'], 0, 10);

	// Load "Duration" and "Is DSV coordinating"
	$data['edit-proposalform-proposal-duration'] = $node->field_duration[LANGUAGE_NONE][0]['value'];
	$data['edit-proposalform-proposal-is-dsv-coordinating'] =
		$node->field_is_dsv_coordinating[LANGUAGE_NONE][0]['value'];

	// Load "Other coordinator"
	if (isset($node->field_other_coordinator[LANGUAGE_NONE])) {
		$data['edit-proposalform-proposal-other-coordinator'] =
			$node->field_other_coordinator[LANGUAGE_NONE][0]['value'];
	} else {
		$data['edit-proposalform-proposal-other-coordinator'] = "";
	}

	// Load "Program/Call/Target"
	if (isset($node->field_program_call_target[LANGUAGE_NONE])) {
		$data['edit-proposalform-proposal-program-call-target'] =
			$node->field_program_call_target[LANGUAGE_NONE][0]['value'];
	} else {
		$data['edit-proposalform-proposal-program-call-target'] = "";
	}

	// Load "Co-financing needed"
	$data['edit-proposalform-proposal-co-financing-needed'] =
		$node->field_co_financing_needed[LANGUAGE_NONE][0]['value'];

	// Load "Co-financing covered by"
	if (isset($node->field_co_financing_covered_by[LANGUAGE_NONE])) {
		$data['edit-proposalform-proposal-co-financing-covered-by'] =
			$node->field_co_financing_covered_by[LANGUAGE_NONE][0]['value'];
	} else {
		$data['edit-proposalform-proposal-co-financing-covered-by'] = "";
	}

	// Load "Percent OH-costs sovered"
	if (isset($node->field_percent_oh_costs_covered[LANGUAGE_NONE])) {
		$data['edit-proposalform-proposal-percent-oh-costs-covered'] =
			$node->field_percent_oh_costs_covered[LANGUAGE_NONE][0]['value'];
	} else {
		$data['edit-proposalform-proposal-percent-oh-costs-covered'] = 0;
	}

	// Load the funding organisation
	if (isset($node->field_funding_organization[LANGUAGE_NONE])) {
		$organization =
			taxonomy_term_load($node->field_funding_organization[LANGUAGE_NONE][0]['tid']);
		$data['edit-proposalform-proposal-funding-organization'] = $organization->name;
	} else {
		$data['edit-proposalform-proposal-funding-organization'] = "";
	}

	// Load budgets
	if (isset($node->field_total_budget_amount_for_co[LANGUAGE_NONE])) {
		$data['edit-proposalform-proposal-total-budget-amount-for-co'] =
			$node->field_total_budget_amount_for_co[LANGUAGE_NONE][0]['value'];
	} else {
		$data['edit-proposalform-proposal-total-budget-amount-for-co'] = 0;
	}

	if (isset($node->field_total_budget_amount_for_ds[LANGUAGE_NONE])) {
		$data['edit-proposalform-proposal-total-budget-amount-for-ds'] =
			$node->field_total_budget_amount_for_ds[LANGUAGE_NONE][0]['value'];
	} else {
		$data['edit-proposalform-proposal-total-budget-amount-for-ds'] = 0;
	}

	// Load attachments
	if (isset($node->field_attachment_unit[LANGUAGE_NONE])) {
		if (!is_array($node->field_attachment_unit[LANGUAGE_NONE])) {
			$node->field_attachment_unit[LANGUAGE_NONE] = (array)$node->field_attachment_unit[LANGUAGE_NONE];
		}
		$files = array();
		foreach ($node->field_attachment_unit[LANGUAGE_NONE] as $key => $value) {
				$file = file_load($value['fid']);
				$uri = $file->uri;
				$url = file_create_url($uri);
				$filename = $file->filename;
				$files[] = array($filename, $url);
		}
		$data['edit-proposalform-proposal-attachment-unit-upload'] = $files;
	} else {
		$data['edit-proposalform-proposal-attachment-unit'] = 0;
	}

	// Load "Currency", "OK from DSV Economy", "Forskningsservice informed", "OK from Uno" and "Sent to Birgitta O"
	$data['edit-proposalform-proposal-currency'] =
		$node->field_currency[LANGUAGE_NONE][0]['value'];
	$data['edit-proposalform-proposal-ok-from-dsv-economy'] =
		$node->field_ok_from_dsv_economy[LANGUAGE_NONE][0]['value'];
	$data['edit-proposalform-proposal-forskningsservice-informed'] =
		$node->field_forskningsservice_informed[LANGUAGE_NONE][0]['value'];
	$data['edit-proposalform-proposal-ok-from-uno'] = $node->field_ok_from_uno[LANGUAGE_NONE][0]['value'];
	$data['edit-proposalform-proposal-ok-from-unit-head'] = $node->field_ok_from_unit_head[LANGUAGE_NONE][0]['value'];
	$data['edit-proposalform-proposal-sent-to-birgitta-o'] = $node->field_sent_to_birgitta_o[LANGUAGE_NONE][0]['value'];

	// Generate JSON and return to caller
	drupal_json_output($data);
}
*/